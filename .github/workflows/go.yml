name: Go

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
      prerelease:
        required: true
        default: "true"
      draft:
        required: true
        default: "true"

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: make build VERSION=${{ github.event.inputs.version }}
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: v${{ github.event.inputs.version }}
        body: released v${{ github.event.inputs.version }}
        draft: ${{ github.event.inputs.draft }}
        prerelease: ${{ github.event.inputs.prerelease }}

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_darwin_arm64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_darwin_arm64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_darwin_amd64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_darwin_amd64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_freebsd_386.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_freebsd_386.tar.gz
        asset_content_type: application/octet-stream


    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_freebsd_amd64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_freebsd_amd64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_freebsd_arm64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_freebsd_arm64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_linux_386.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_linux_386.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_linux_amd64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_linux_amd64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_linux_arm64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_linux_arm64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_windows_386.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_windows_386.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_windows_amd64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_windows_amd64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-safe-drain_${{ github.event.inputs.version }}_windows_arm64.tar.gz
        asset_name: kubectl-safe-drain_${{ github.event.inputs.version }}_windows_arm64.tar.gz
        asset_content_type: application/octet-stream
